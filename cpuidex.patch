diff -aurp apache-arrow-0.11.1-orig/cpp/src/arrow/util/cpu-info.cc apache-arrow-0.11.1/cpp/src/arrow/util/cpu-info.cc
--- apache-arrow-0.11.1-orig/cpp/src/arrow/util/cpu-info.cc	2018-12-18 20:42:16.585923000 +0000
+++ apache-arrow-0.11.1/cpp/src/arrow/util/cpu-info.cc	2018-12-18 20:45:20.641159000 +0000
@@ -54,6 +54,12 @@ using boost::algorithm::contains;
 using boost::algorithm::trim;
 using std::max;
 
+void my__cpuidex(int CPUInfo[4], int function_id, int subfunction_id) {
+   __asm__ __volatile__ (
+      "cpuid"
+      : "=a" (CPUInfo [0]), "=b" (CPUInfo [1]), "=c" (CPUInfo [2]), "=d" (CPUInfo [3])
+      : "a" (function_id), "c" (subfunction_id));
+}
 namespace arrow {
 namespace internal {
 
@@ -148,7 +154,7 @@ bool RetrieveCPUInfo(int64_t* hardware_f
 
   if (highest_valid_id <= register_ECX_id) return false;
 
-  __cpuidex(cpu_info.data(), register_ECX_id, 0);
+  my__cpuidex(cpu_info.data(), register_ECX_id, 0);
   features_ECX = cpu_info[2];
 
   // Get highest extended id
@@ -159,7 +165,7 @@ bool RetrieveCPUInfo(int64_t* hardware_f
   if (highest_extended_valid_id >= 0x80000004) {
     model_name->clear();
     for (int i = 0x80000002; i <= 0x80000004; ++i) {
-      __cpuidex(cpu_info.data(), i, 0);
+      my__cpuidex(cpu_info.data(), i, 0);
       *model_name +=
           std::string(reinterpret_cast<char*>(cpu_info.data()), sizeof(cpu_info));
     }
